View(region)
population <- read.table("../data/pop_state.xlsx")
?read.table
population <- read.table("../data/pop_state.xlsx", header = TRUE)
region <- read.csv("../data/cvd_region.csv")
View(region)
population <- read.delim("../data/pop_state.xlsx")
population <- read.delim("../data/pop_state.xlsx", header = FALSE)
population <- read.delim("../data/pop_state.xlsx", header = TRUE)
population <- read.delim("../raw_data/pop_state.xlsx", header = TRUE)
population <- read.delim("../raw_data/pop_state.xlsx")
population <- read.table("../raw_data/pop_state.xlsx")
population <- read.txt("../raw_data/pop_state.xlsx")
library(readxl)
population <- read_excel("../raw_data/pop_state.xlsx")
View(population)
population <- read_excel("../raw_data/pop_state.xlsx", header = FALSE)
?read_excel
population <- read_excel("../raw_data/pop_state.xlsx")
population <- read_excel("../raw_data/pop_state.xlsx", col_names = FALSE)
View(population)
View(population)
population[6:9, ]
population[4:9, ]
colnames(population[4:9, ])
population[4:9, ]
population[, c(1, 13, 15)]
data.needed <- population[4:9, ]
data.needed
data.needed[, c(1, 13, 15)]
data.needed[c(-2), c(1, 13, 15)]
data.needed <- data.needed[c(-2), c(1, 13, 15)]
data.needed
colnames(data.needed.new) <- c("region", "2019", "2020")
data.needed.new <- data.needed[c(-2), c(1, 13, 15)]
region <- read.csv("../data/cvd_region.csv")
population <- read_excel("../raw_data/pop_state.xlsx", col_names = FALSE)
data.needed <- population[4:9, ]
data.needed
data.needed.new <- data.needed[c(-2), c(1, 13, 15)]
data.needed.new
colnames(data.needed.new) <- c("region", "2019", "2020")
colnames(data.needed.new) <- c("region", "2019", "2020")
data.needed.new
region <- read.csv("../data/cvd_region.csv")
population <- read_excel("../raw_data/pop_state.xlsx", col_names = FALSE)
data.needed <- population[4:9, ]
data.needed
data.needed.new <- data.needed[c(-1, -2), c(1, 13, 15)]
colnames(data.needed.new) <- c("region", "2019", "2020")
data.needed.new
region.month
colnames(region)
region[1, "month"]
grep("2018", region[1, "month"])
grep("2019", region[1, "month"])
if (1) {r}
if (1) {print(1)}
if (0) {print(1)}
data.needed.new <- data.needed[c(-1, -2), c(1, 12, 13, 15)]
colnames(data.needed.new) <- c("region", "2018", "2019", "2020")
data.needed.new
for (i in nrow(region)){
if (region[i, "region"] == "Northeast") {
if (grep("18", region[i, "month"])) {
region[i, "population"] = data.needed.new[1, 2]
} else if (grep("19", region[i, "month"])) {
region[i, "population"] = data.needed.new[1, 3]
}
else {
region[i, "population"] = data.needed.new[1, 4]
}
}}
for (i in 1:nrow(region)){
if (region[i, "region"] == "Northeast") {
if (grep("18", region[i, "month"])) {
region[i, "population"] = data.needed.new[1, 2]
} else if (grep("19", region[i, "month"])) {
region[i, "population"] = data.needed.new[1, 3]
}
else {
region[i, "population"] = data.needed.new[1, 4]
}
}}
region <- read.csv("../data/cvd_region.csv")
for (i in 1:nrow(region)){
if (region[i, "region"] == "Northeast") {
if (grep("18", region[i, "month"])) {
region[i, "population"] = data.needed.new[1, 2]
} else if (grep("19", region[i, "month"])) {
region[i, "population"] = data.needed.new[1, 3]
}
else {
region[i, "population"] = data.needed.new[1, 4]
}
}}
region[1, "region"]
for (i in 1:nrow(region)){
if (region[i, "region"] == "Northeast") {
if (grep("18", region[i, "month"])) {
region[i, "population"] = data.needed.new[1, 2]
} else if (grep("19", region[i, "month"])) {
region[i, "population"] = data.needed.new[1, 3]
} else {
region[i, "population"] = data.needed.new[1, 4]
}
}
}
grep("18", region[1, "month"])
region <- read.csv("../data/cvd_region.csv")
population <- read_excel("../raw_data/pop_state.xlsx", col_names = FALSE)
for (i in 1:nrow(region)){
if (region[i, "region"] == "Northeast") {
if (grep("18", region[i, "month"])) {
region[i, "population"] = data.needed.new[1, 2]
} else if (grep("19", region[i, "month"])) {
region[i, "population"] = data.needed.new[1, 3]
} else {
region[i, "population"] = data.needed.new[1, 4]
}
}
}
region <- read.csv("../data/cvd_region.csv")
population <- read_excel("../raw_data/pop_state.xlsx", col_names = FALSE)
for (i in 1:nrow(region)){
if (region[i, "region"] == "Northeast") {
if (grep("2018", region[i, "month"])) {
region[i, "population"] = data.needed.new[1, 2]
} else if (grep("2019", region[i, "month"])) {
region[i, "population"] = data.needed.new[1, 3]
} else {
region[i, "population"] = data.needed.new[1, 4]
}
}
}
region <- read.csv("../data/cvd_region.csv")
population <- read_excel("../raw_data/pop_state.xlsx", col_names = FALSE)
library(readxl)
population <- read_excel("../raw_data/pop_state.xlsx", col_names = FALSE)
View(region)
data.needed <- population[4:9, ]
data.needed
data.needed.new <- data.needed[c(-1, -2), c(1, 12, 13, 15)]
colnames(data.needed.new) <- c("region", "2018", "2019", "2020")
data.needed.new
View(region)
View(population)
grep("2018", region$month)
region[test, ]
test <- grep("2018", region$month)
region[test, ]
?grep
regionNortheast.index <- grep("Northeast", region$region)
regionNortheast.index
region[regionNortheast.index, ]
intersect(region2018.index, regionNortheast.index)
regionNortheast.index <- grep("Northeast", region$region)
intersect(region2018.index, regionNortheast.index)
region2018.index <- grep("2018", region$month)
intersect(region2018.index, regionNortheast.index)
data.needed.new[region == "Northeast"]
rownames(data.needed.new) <- region$region
rownames(data.needed.new) <- region$region
rownames(data.needed.new) <- data.needed.new$region
data.needed.new
data.needed.new[region == "Northeast", year == "2018"]
data.needed.new[region == "Northeast", "2018"]
data.needed <- population[4:9, ]
data.needed
data.needed.new <- data.needed[c(-1, -2), c(1, 12, 13, 15)]
colnames(data.needed.new) <- c("region", "2018", "2019", "2020")
data.needed.new
data.needed.new$region == "Northeast"
data.needed.new$`2018`[data.needed.new$region == reg]
data.needed.new$`2018`[data.needed.new$region == "West"]
for (year in c("2018", "2019", "2020")) {
for (reg in c("Northeast", "Midwest", "South", "West")) {
year.index <- grep(year, region$month)
region.index <- grep(reg, region$region)
shared <- intersect(year.index, region.index)
data.needed.new$region == reg
region[shared, "population"] <- data.needed.new$`year`[data.needed.new$region == reg]
}
}
for (year in c("2018", "2019", "2020")) {
for (reg in c("Northeast", "Midwest", "South", "West")) {
year.index <- grep(year, region$month)
region.index <- grep(reg, region$region)
shared <- intersect(year.index, region.index)
region[shared, "population"] <- data.needed.new$`year`[data.needed.new$region == reg]
}
}
for (year in c("2018", "2019", "2020")) {
for (reg in c("Northeast", "Midwest", "South", "West")) {
year.index <- grep(year, region$month)
region.index <- grep(reg, region$region)
shared <- intersect(year.index, region.index)
print(data.needed.new$`year`[data.needed.new$region == reg])
# region[shared, "population"] <- data.needed.new$`year`[data.needed.new$region == reg]
}
}
for (year in c("2018", "2019", "2020")) {
for (reg in c("Northeast", "Midwest", "South", "West")) {
year.index <- grep(year, region$month)
region.index <- grep(reg, region$region)
shared <- intersect(year.index, region.index)
print(data.needed.new$year[data.needed.new$region == reg])
# region[shared, "population"] <- data.needed.new$`year`[data.needed.new$region == reg]
}
}
for (year in c("2018", "2019", "2020")) {
for (reg in c("Northeast", "Midwest", "South", "West")) {
year.index <- grep(year, region$month)
region.index <- grep(reg, region$region)
shared <- intersect(year.index, region.index)
print(data.needed.new$year[data.needed.new$region == reg, year])
break
# region[shared, "population"] <- data.needed.new$`year`[data.needed.new$region == reg]
}
}
for (year in c("2018", "2019", "2020")) {
for (reg in c("Northeast", "Midwest", "South", "West")) {
year.index <- grep(year, region$month)
region.index <- grep(reg, region$region)
shared <- intersect(year.index, region.index)
print(data.needed.new[data.needed.new$region == reg, year])
break
# region[shared, "population"] <- data.needed.new$`year`[data.needed.new$region == reg]
}
}
for (year in c("2018", "2019", "2020")) {
for (reg in c("Northeast", "Midwest", "South", "West")) {
year.index <- grep(year, region$month)
region.index <- grep(reg, region$region)
shared <- intersect(year.index, region.index)
data.needed.new[data.needed.new$region == reg, year])
for (year in c("2018", "2019", "2020")) {
for (reg in c("Northeast", "Midwest", "South", "West")) {
year.index <- grep(year, region$month)
region.index <- grep(reg, region$region)
shared <- intersect(year.index, region.index)
region[shared, "population"] <- data.needed.new[data.needed.new$region == reg, year])
for (year in c("2018", "2019", "2020")) {
for (reg in c("Northeast", "Midwest", "South", "West")) {
year.index <- grep(year, region$month)
region.index <- grep(reg, region$region)
shared <- intersect(year.index, region.index)
region[shared, "population"] <- data.needed.new[data.needed.new$region == reg, year]
}
}
View(region)
region$crude_rate <- 100000 * death / population
region$crude_rate <- 100000 * region$death / region$population
region$death / region$population
region$death
as.vector(region$death) / as.vector(region$population)
typeof(region$death)
typeof(region$population)
region$population <- as.integer(region$population)
region$crude_rate <- 100000 * region$death / region$population
View(region)
write.csv(region, file = "../data/cvd_region_crude_rate.csv", row.names = FALSE)
ggplot(region, aes(x = region, y = crude_rate)) + geom_boxplot() + labs(x = "region", y = "crude rate", title = "Boxplot of crude rate by region")
library(tidyverse)
library(ggplot2)
region <- read.csv("../data/cvd_region_crude_rate.csv")
region %>%
group_by(region) %>%
summarise(
count = n(),
mean = mean(crude_rate, na.rm = TRUE),
sd = sd(crude_rate, na.rm = TRUE),
median = median(crude_rate, na.rm = TRUE),
IQR = IQR(crude_rate, na.rm = TRUE)
)
ggplot(region, aes(x = region, y = crude_rate)) + geom_boxplot() + labs(x = "region", y = "crude rate", title = "Boxplot of crude rate by region")
theme_minimal()
ggplot(region, aes(x = region, y = crude_rate)) + geom_boxplot() + labs(x = "region", y = "crude rate", title = "Boxplot of crude rate by region") + theme_minimal()
ggplot(region, aes(x = region, y = crude_rate)) + geom_boxplot() + labs(x = "region", y = "crude rate", title = "Boxplot of crude rate by region") + theme(plot.title = element_text(size = 15, face = 'bold')) +
ggplot(region, aes(x = region, y = crude_rate)) + geom_boxplot() + labs(x = "region", y = "crude rate", title = "Boxplot of crude rate by region") + theme(plot.title = element_text(size = 15, face = 'bold'))
+ theme_minimal()
ggplot(region, aes(x = region, y = crude_rate)) + geom_boxplot() +
labs(x = "region", y = "crude rate", title = "Boxplot of crude rate by region")
+ theme_minimal()
ggplot(region, aes(x = region, y = crude_rate)) + geom_boxplot() +
labs(x = "region", y = "crude rate", title = "Boxplot of crude rate by region") + theme_minimal()
region %>%
ggplot(aes(x = crude_rate, fill = region)) +
geom_histogram(color="#e9ecef", alpha=0.6, position = 'identity') +
scale_fill_manual(values=c("red", "blue")) +
labs(x = 'crude rate', y = "count", title = 'Boxplot of crude rates by region') +
theme(plot.title = element_text(size = 15, face = 'bold'))
region %>%
ggplot(aes(x = crude_rate, fill = region)) +
geom_histogram(color="#e9ecef", alpha=0.6, position = 'identity')
# scale_fill_manual(values=c("red", "blue")) +
# labs(x = 'crude rate', y = "count", title = 'Boxplot of crude rates by region') +
# theme(plot.title = element_text(size = 15, face = 'bold'))
View(region)
View(region)
?facet_grid
# ggplot(aes(x = crude_rate, fill = region)) +
# geom_histogram(color="#e9ecef", alpha=0.6, position = 'identity')
region %>%
group_by(region) %>%
facet_grid(rows = vars(crude_rate))
region %>%
group_by(region)
region %>%
group_by(region) %>%
facet_grid(rows = vars(region))
region %>%
group_by(region) %>%
facet_wrap(facets = vars(region))
region_grouped <- region %>%
group_by(region)
ggplot(region_grouped, aes(x = region, y = crude_rate))
ggplot(region_grouped, aes(x = region, y = crude_rate)) + geom_histogram()
library(tidyverse)
library(ggplot2)
library(rstatix)
region <- read.csv("../data/cvd_region_crude_rate.csv")
View(region)
typeof(region$region)
?grep
grep("2018", region$month)
grep("2018", region$month) ||
grep("2019", region$month)
paste(grep("2018", region$month),grep("2019", region$month) )
append(grep("2018", region$month),grep("2019", region$month) )
region$before_covid[before_covid_index] <- 1
before_covid_index <- append(grep("2018", region$month), grep("2019", region$month))
region$before_covid[before_covid_index] <- 1
region$before_covid <- c()
View(region)
region$before_covid
before_covid_index
region <- region %>%
mutate(dummy = c(rep(FALSE, index - 1), TRUE, rep(FALSE, nrow(df) - index)))
region <- region %>%
mutate(dummy = c(rep(FALSE, before_covid_index - 1), TRUE, rep(FALSE, nrow(region) - before_covid_index)))
before_covid_index - 1
before_covid_index
# load region data
region <- read.csv("../data/cvd_region_crude_rate.csv")
# create a boolean dummy column named `before_covid` to indicate if this row is
# before COVID. If yes, before_covid = 1; if no, before_covid = 0
before_covid_index <- append(grep("2018", region$month), grep("2019", region$month))
region$before_covid <- 0
region$before_covid[before_covid_index] <- 1
# report summary statistics of `crude_rate`
region %>%
group_by(region) %>%
summarise(
count = n(),
mean = mean(crude_rate, na.rm = TRUE),
sd = sd(crude_rate, na.rm = TRUE),
median = median(crude_rate, na.rm = TRUE),
IQR = IQR(crude_rate, na.rm = TRUE)
)
View(region)
ggplot(region, aes(x = region, y = crude_rate)) + geom_boxplot() +
labs(x = "region", y = "crude rate", title = "Boxplot of crude rate by region") +
theme_minimal()
region %>%
group_by(region) %>%
ggplot(aes(x=crude_rate)) +
geom_histogram(color="#e9ecef", alpha=0.6, position = 'identity') +
ggtile(paste("Histogram of ", unique(region)))
region %>%
group_by(region) %>%
ggplot(aes(x=crude_rate)) +
geom_histogram(color="#e9ecef", alpha=0.6, position = 'identity') +
ggtitle(paste("Histogram of ", unique(region)))
#   scale_fill_manual(values=c("red", "blue")) +
#   labs(x = 'Crude Rate', y = "region", title = 'Boxplot of Crude Rates by region') +
# theme(plot.title = element_text(size = 15, face = 'bold'))
region %>%
group_by(region) %>%
ggplot(aes(x=crude_rate)) +
geom_histogram(color="#e9ecef", alpha=0.6, position = 'identity') +
ggtitle(paste("Histogram of ", unique(region)));
#   scale_fill_manual(values=c("red", "blue")) +
#   labs(x = 'Crude Rate', y = "region", title = 'Boxplot of Crude Rates by region') +
# theme(plot.title = element_text(size = 15, face = 'bold'))
region %>%
group_by(region) %>%
ggplot(aes(x=crude_rate)) +
geom_histogram()
#   scale_fill_manual(values=c("red", "blue")) +
#   labs(x = 'Crude Rate', y = "region", title = 'Boxplot of Crude Rates by region') +
# theme(plot.title = element_text(size = 15, face = 'bold'))
region %>%
group_by(region) %>%
ggplot(aes(x=crude_rate)) +
geom_histogram() + facet_wrap(~ region, nrow = 2, ncol =2)
#   scale_fill_manual(values=c("red", "blue")) +
#   labs(x = 'Crude Rate', y = "region", title = 'Boxplot of Crude Rates by region') +
# theme(plot.title = element_text(size = 15, face = 'bold'))
region %>%
group_by(region) %>%
ggplot(aes(x=crude_rate)) +
geom_histogram() + facet_wrap(~ region, nrow = 2, ncol =2) +
scale_fill_manual(values = c("red", "green", "blue", "orange"))
region %>%
group_by(region) %>%
ggplot(aes(x=crude_rate)) +
geom_histogram() + facet_wrap(~ region, nrow = 2, ncol =2) +
region %>%
group_by(region) %>%
ggplot(aes(x=crude_rate)) +
geom_histogram() + facet_wrap(~ region, nrow = 2, ncol =2)
shapiro.test(region$crude_rate)
region %>%
group_by(region) %>%
get_summary_stats(crude_rate,type = "mean_sd")
region %>%
group_by(region) %>%
identify_outliers(crude_rate)
region_outliers <- region %>%
group_by(region) %>%
identify_outliers(crude_rate)
region_outliers
region <- region %>%
anti_join(region_outliers)
region %>%
group_by(region) %>%
shapiro_test(crude_rate)
region %>%
levene_test(crude_rate ~ region)
anova_result <- region %>%
aov(crude_rate ~ region, data = .)
summary(anova_result)
styler:::style_active_file()
northeast <- region[region$region %in% "Northeast", ]
head(northeast)
northeast %>%
get_summary_stats(crude_rate,type = "mean_sd")
northeast %>%
identify_outliers(crude_rate)
northeast %>%
shapiro_test(crude_rate)
View(northeast)
# separate Pre- and Post-COVID data
northeast_pre <- northeast[northeast$before_covid == 1, ]
northeast_post <- northeast[northeast$before_covid == 0, ]
northeast %>%
t_test(crude_rate ~ before_covid, alternative = "less") %>%
add_significance()
ggplot(data = northeast)+
geom_boxplot(mapping = aes(x = before_covid, y = crude_rate)) +
labs(x = "Pre/Post COVID", y = "Crude rates", title = "Crude Rates Pre- and Post- COVID") + theme(plot.title = element_text(hjust = 0.5))
ggplot(data = northeast)+
geom_boxplot(mapping = aes(x = before_covid, y = crude_rate))
ggplot(data = northeast)+
geom_boxplot(aes(x = before_covid, y = crude_rate))
ggplot(data = northeast)+
geom_boxplot(mapping = aes(x = before_covid, y = crude_rate))
boxplot(crude_rate ~ before_covid, data = northeast, xlab = "Pre/Post COVID",
ylab = "Crude Rate", main = "Crude Rates Pre- and Post- COVID in the Northeaster region")
axis(1, at = c(1, 2), labels = c("Post", "Before"))
boxplot(crude_rate ~ before_covid, data = northeast, xlab = "Pre/Post COVID",
ylab = "Crude Rate", main = "Crude Rates Pre- and Post- COVID in the Northeaster region")
axis(1, at = c(1, 2), labels = c("Post", "Before"))
unique(region$region)
boxplot(crude_rate ~ before_covid, data = northeast, xlab = "Pre/Post COVID",
ylab = "Crude Rate", main = "Crude Rates Pre- and Post- COVID in the Northeaster region", axes = FALSE)
axis(1, at = c(1, 2), labels = c("Post", "Before"))
midwest <- region[region$region %in% "Midwest", ]
head(midwest)
midwest %>%
get_summary_stats(crude_rate,type = "mean_sd")
midwest %>%
t_test(crude_rate ~ before_covid, alternative = "less") %>%
add_significance()
boxplot(crude_rate ~ before_covid, data = northeast, xlab = "Pre/Post COVID",
ylab = "Crude Rate", main = "Crude Rates Pre- and Post- COVID in the Northeaster region")
axis(1, at = c(0, 1), labels = c("Post", "Before"))
boxplot(crude_rate ~ before_covid, data = northeast, xlab = "Pre/Post COVID",
ylab = "Crude Rate", main = "Crude Rates Pre- and Post- COVID in the Northeaster region")
south <- region[region$region %in% "South", ]
head(south)
south %>%
get_summary_stats(crude_rate,type = "mean_sd")
south %>%
t_test(crude_rate ~ before_covid, alternative = "less") %>%
add_significance()
boxplot(crude_rate ~ before_covid, data = south, xlab = "Pre/Post COVID",
ylab = "Crude Rate", main = "Crude Rates Pre- and Post- COVID in the Midwestern region")
west <- region[region$region %in% "West", ]
head(west)
west %>%
get_summary_stats(crude_rate,type = "mean_sd")
west %>%
t_test(crude_rate ~ before_covid, alternative = "less") %>%
add_significance()
library(stringi)
mytext <- readLines("cvd_region_confounder.Rmd", encoding = "UTF-8")
mytext <- stri_trans_general(mytext, "latin-ascii")
writeLines(mytext, "cvd_region_confounder.Rmd", encoding = "UTF-8")
library(stringi)
mytext <- readLines("cvd_region_confounder.Rmd")
mytext <- stri_trans_general(mytext, "latin-ascii")
writeLines(mytext, "cvd_region_confounder.Rmd", encoding = "UTF-8")
library(stringi)
mytext <- readLines("cvd_region_confounder.Rmd", encoding = "UTF-8")
mytext <- stri_trans_general(mytext, "latin-ascii")
writeLines(mytext, "cvd_region_confounder.Rmd")
update.packages(ask = FALSE, checkBuilt = TRUE)
tinytex::reinstall_tinytex()
tinytex::reinstall_tinytex(force = TRUE)
tinytex::reinstall_tinytex()
